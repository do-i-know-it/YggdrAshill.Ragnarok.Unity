<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YggdrAshill.Ragnarok.Construction</name>
    </assembly>
    <members>
        <member name="T:YggdrAshill.Ragnarok.Argument">
            <summary>
            Defines argument to inject a dependency into.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.Argument.Name">
            <summary>
            Name of <see cref="T:YggdrAshill.Ragnarok.Argument"/>.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.Argument.Type">
            <summary>
            Type of <see cref="T:YggdrAshill.Ragnarok.Argument"/>.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.Argument.#ctor(System.String,System.Type)">
            <summary>
            Constructor of <see cref="T:YggdrAshill.Ragnarok.Argument"/>.
            </summary>
            <param name="name">
            <see cref="T:System.String"/> for <see cref="P:YggdrAshill.Ragnarok.Argument.Name"/>.
            </param>
            <param name="type">
            <see cref="T:System.Type"/> for <see cref="P:YggdrAshill.Ragnarok.Argument.Type"/>.
            </param>
        </member>
        <member name="T:YggdrAshill.Ragnarok.DependencyInjectionRequest">
            <summary>
            Defines request for dependency injection.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.DependencyInjectionRequest.ImplementedType">
            <summary>
            <see cref="T:System.Type"/> to resolve.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.DependencyInjectionRequest.ParameterList">
            <summary>
            <see cref="T:YggdrAshill.Ragnarok.IParameter"/>s to resolve.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.DependencyInjectionRequest.#ctor(System.Type,YggdrAshill.Ragnarok.IParameter[])">
            <summary>
            Constructor of <see cref="T:YggdrAshill.Ragnarok.DependencyInjectionRequest"/>.
            </summary>
            <param name="implementedType">
            <see cref="T:System.Type"/> for <see cref="P:YggdrAshill.Ragnarok.DependencyInjectionRequest.ImplementedType"/>.
            </param>
            <param name="parameterList">
            <see cref="T:YggdrAshill.Ragnarok.IParameter"/>s for <see cref="P:YggdrAshill.Ragnarok.DependencyInjectionRequest.ParameterList"/>.
            </param>
        </member>
        <member name="T:YggdrAshill.Ragnarok.ICompilation">
            <summary>
            Defines how to instantiate or inject into instance.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.ICompilation.CreateInstantiation(YggdrAshill.Ragnarok.DependencyInjectionRequest)">
            <summary>
            Creates <see cref="T:YggdrAshill.Ragnarok.IInstantiation"/> for <paramref name="request"/> to instantiate.
            </summary>
            <param name="request">
            <see cref="T:YggdrAshill.Ragnarok.DependencyInjectionRequest"/> to create.
            </param>
            <returns>
            <see cref="T:YggdrAshill.Ragnarok.IInstantiation"/> created.
            </returns>
        </member>
        <member name="M:YggdrAshill.Ragnarok.ICompilation.CreateFieldInjection(YggdrAshill.Ragnarok.DependencyInjectionRequest)">
            <summary>
            Creates <see cref="T:YggdrAshill.Ragnarok.IInjection"/> for <paramref name="request"/> to inject dependencies into fields.
            </summary>
            <param name="request">
            <see cref="T:YggdrAshill.Ragnarok.DependencyInjectionRequest"/> to create.
            </param>
            <returns>
            <see cref="T:YggdrAshill.Ragnarok.IInjection"/> created.
            </returns>
        </member>
        <member name="M:YggdrAshill.Ragnarok.ICompilation.CreatePropertyInjection(YggdrAshill.Ragnarok.DependencyInjectionRequest)">
            <summary>
            Creates <see cref="T:YggdrAshill.Ragnarok.IInjection"/> for <paramref name="request"/> to inject dependencies into properties.
            </summary>
            <param name="request">
            <see cref="T:YggdrAshill.Ragnarok.DependencyInjectionRequest"/> to create.
            </param>
            <returns>
            <see cref="T:YggdrAshill.Ragnarok.IInjection"/> created.
            </returns>
        </member>
        <member name="M:YggdrAshill.Ragnarok.ICompilation.CreateMethodInjection(YggdrAshill.Ragnarok.DependencyInjectionRequest)">
            <summary>
            Creates <see cref="T:YggdrAshill.Ragnarok.IInjection"/> for <paramref name="request"/> to inject dependencies into method.
            </summary>
            <param name="request">
            <see cref="T:YggdrAshill.Ragnarok.DependencyInjectionRequest"/> to create.
            </param>
            <returns>
            <see cref="T:YggdrAshill.Ragnarok.IInjection"/> created.
            </returns>
        </member>
        <member name="T:YggdrAshill.Ragnarok.ICondition">
            <summary>
            Defines how to count <see cref="T:YggdrAshill.Ragnarok.IStatement"/>s satisfied with condition.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.ICondition.IsSatisfied(YggdrAshill.Ragnarok.IStatement)">
            <summary>
            Detects <see cref="T:YggdrAshill.Ragnarok.IStatement"/> to select.
            </summary>
            <param name="statement">
            <see cref="T:YggdrAshill.Ragnarok.IStatement"/> to select.
            </param>
            <returns>
            True if <paramref name="statement"/> is satisfied with this.
            </returns>
        </member>
        <member name="T:YggdrAshill.Ragnarok.IExecution">
            <summary>
            Defines what to execute for <see cref="T:YggdrAshill.Ragnarok.IObjectResolver"/> just after building it.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IExecution.Execute(YggdrAshill.Ragnarok.IObjectResolver)">
            <summary>
            Executes for <paramref name="resolver"/>.
            </summary>
            <param name="resolver">
            <see cref="T:YggdrAshill.Ragnarok.IObjectResolver"/> to execute.
            </param>
        </member>
        <member name="T:YggdrAshill.Ragnarok.IInjection">
            <summary>
            Defines how to inject dependencies into instance to resolve.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IInjection.Inject(YggdrAshill.Ragnarok.IObjectResolver,System.Object)">
            <summary>
            Injects dependencies into <paramref name="instance"/> with <paramref name="resolver"/>.
            </summary>
            <param name="resolver">
            <see cref="T:YggdrAshill.Ragnarok.IObjectResolver"/> to inject.
            </param>
            <param name="instance">
            <see cref="T:System.Object"/> to inject.
            </param>
        </member>
        <member name="T:YggdrAshill.Ragnarok.IInstallation">
            <summary>
            Defines how to register dependencies into <see cref="T:YggdrAshill.Ragnarok.IObjectContainer"/>.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IInstallation.Install(YggdrAshill.Ragnarok.IObjectContainer)">
            <summary>
            Installs dependencies into <paramref name="container"/>.
            </summary>
            <param name="container">
            <see cref="T:YggdrAshill.Ragnarok.IObjectContainer"/> to install.
            </param>
        </member>
        <member name="T:YggdrAshill.Ragnarok.IInstantiation">
            <summary>
            Defines how to instantiate instance resolved dependency.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IInstantiation.Instantiate(YggdrAshill.Ragnarok.IObjectResolver)">
            <summary>
            Creates instance with <paramref name="resolver"/>.
            </summary>
            <param name="resolver">
            <see cref="T:YggdrAshill.Ragnarok.IObjectResolver"/> to instantiate.
            </param>
            <returns>
            <see cref="T:System.Object"/> instantiated.
            </returns>
        </member>
        <member name="T:YggdrAshill.Ragnarok.IObjectContainer">
            <summary>
            Defines how to resolve dependencies in <see cref="T:YggdrAshill.Ragnarok.IObjectScope"/>.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.IObjectContainer.Resolver">
            <summary>
            <see cref="T:YggdrAshill.Ragnarok.IObjectResolver"/> to resolve dependency.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.IObjectContainer.Compilation">
            <summary>
            <see cref="T:YggdrAshill.Ragnarok.ICompilation"/> to resolve dependency.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.IObjectContainer.Registration">
            <summary>
            <see cref="T:YggdrAshill.Ragnarok.IRegistration"/> to resolve dependency.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IObjectContainer.CreateContext">
            <summary>
            Creates <see cref="T:YggdrAshill.Ragnarok.IObjectContext"/> to resolve dependency.
            </summary>
            <returns>
            <see cref="T:YggdrAshill.Ragnarok.IObjectContext"/> created.
            </returns>
        </member>
        <member name="T:YggdrAshill.Ragnarok.IObjectContext">
            <summary>
            Defines how to create <see cref="T:YggdrAshill.Ragnarok.IObjectScope"/>.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IObjectContext.CreateScope">
            <summary>
            Creates <see cref="T:YggdrAshill.Ragnarok.IObjectScope"/>.
            </summary>
            <returns>
            <see cref="T:YggdrAshill.Ragnarok.IObjectScope"/> created.
            </returns>
        </member>
        <member name="T:YggdrAshill.Ragnarok.IObjectResolver">
            <summary>
            Defines how to obtain instance resolved dependencies.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IObjectResolver.Resolve(System.Type)">
            <summary>
            Gets instance of <paramref name="type"/>.
            </summary>
            <param name="type">
            <see cref="T:System.Type"/> to resolve.
            </param>
            <returns>
            <see cref="T:System.Object"/> resolved.
            </returns>
            <exception cref="T:YggdrAshill.Ragnarok.RagnarokException">
            Thrown if something goes wrong in resolving dependencies.
            </exception>
        </member>
        <member name="T:YggdrAshill.Ragnarok.IObjectScope">
            <summary>
            Defines how to manage <see cref="T:YggdrAshill.Ragnarok.IObjectResolver"/>.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.IObjectScope.Resolver">
            <summary>
            <see cref="T:YggdrAshill.Ragnarok.IObjectResolver"/> managed in this <see cref="T:YggdrAshill.Ragnarok.IObjectScope"/>.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Thrown if this <see cref="T:YggdrAshill.Ragnarok.IObjectScope"/> is disposed.
            </exception>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IObjectScope.CreateContext">
            <summary>
            Creates <see cref="T:YggdrAshill.Ragnarok.IObjectContext"/> to create new <see cref="T:YggdrAshill.Ragnarok.IObjectScope"/>.
            </summary>
            <returns>
            <see cref="T:YggdrAshill.Ragnarok.IObjectContext"/> created.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            Thrown if this <see cref="T:YggdrAshill.Ragnarok.IObjectScope"/> is disposed.
            </exception>
        </member>
        <member name="T:YggdrAshill.Ragnarok.IParameter">
            <summary>
            Defines parameter to inject a dependency into.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IParameter.CanResolve(YggdrAshill.Ragnarok.Argument,System.Object@)">
            <summary>
            Gets <paramref name="instance"/> if this is for <paramref name="argument"/>.
            </summary>
            <param name="argument">
            <see cref="T:YggdrAshill.Ragnarok.Argument"/> to resolve.
            </param>
            <param name="instance">
            <see cref="T:System.Object"/> to resolve.
            </param>
            <returns>
            True if this is for <paramref name="argument"/>.
            </returns>
        </member>
        <member name="T:YggdrAshill.Ragnarok.IRegistration">
            <summary>
            Defines how to register dependencies.
            </summary>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IRegistration.Count(YggdrAshill.Ragnarok.ICondition)">
            <summary>
            Counts <see cref="T:YggdrAshill.Ragnarok.IStatement"/> satisfied with <paramref name="condition"/>.
            </summary>
            <param name="condition">
            <see cref="T:YggdrAshill.Ragnarok.ICondition"/> to count.
            </param>
            <returns>
            Count of <see cref="T:YggdrAshill.Ragnarok.IStatement"/>s.
            </returns>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IRegistration.Register(YggdrAshill.Ragnarok.IStatement)">
            <summary>
            Adds <see cref="T:YggdrAshill.Ragnarok.IStatement"/> to register dependencies.
            </summary>
            <param name="statement">
            <see cref="T:YggdrAshill.Ragnarok.IStatement"/> to register.
            </param>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IRegistration.Register(YggdrAshill.Ragnarok.IExecution)">
            <summary>
            Adds <see cref="T:YggdrAshill.Ragnarok.IExecution"/> to initialize <see cref="T:YggdrAshill.Ragnarok.IObjectResolver"/>.
            </summary>
            <param name="execution">
            <see cref="T:YggdrAshill.Ragnarok.IExecution"/> to register.
            </param>
        </member>
        <member name="M:YggdrAshill.Ragnarok.IRegistration.Register(System.IDisposable)">
            <summary>
            Adds <see cref="T:System.IDisposable"/> to bind.
            </summary>
            <param name="disposable">
            <see cref="T:System.IDisposable"/> to register.
            </param>
        </member>
        <member name="T:YggdrAshill.Ragnarok.IStatement">
            <summary>
            Defines how to declare a dependency.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.IStatement.ImplementedType">
            <summary>
            <see cref="T:System.Type"/> to instantiate.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.IStatement.AssignedTypeList">
            <summary>
            <see cref="T:System.Type"/>s to resolve.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.IStatement.Lifetime">
            <summary>
            How to manage lifetime for <see cref="P:YggdrAshill.Ragnarok.IStatement.ImplementedType"/>.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.IStatement.Ownership">
            <summary>
            How to manage ownership for <see cref="P:YggdrAshill.Ragnarok.IStatement.ImplementedType"/>.
            </summary>
        </member>
        <member name="P:YggdrAshill.Ragnarok.IStatement.Instantiation">
            <summary>
            How to instantiate <see cref="P:YggdrAshill.Ragnarok.IStatement.ImplementedType"/>.
            </summary>
        </member>
        <member name="T:YggdrAshill.Ragnarok.Lifetime">
            <summary>
            Defines period of life for an instance resolved.
            </summary>
        </member>
        <member name="F:YggdrAshill.Ragnarok.Lifetime.Temporal">
            <summary>
            Instantiates per request.
            </summary>
        </member>
        <member name="F:YggdrAshill.Ragnarok.Lifetime.Local">
            <summary>
            Instantiates per scope.
            </summary>
        </member>
        <member name="F:YggdrAshill.Ragnarok.Lifetime.Global">
            <summary>
            Instantiates per service.
            </summary>
        </member>
        <member name="T:YggdrAshill.Ragnarok.Ownership">
            <summary>
            Defines permission to control an instance.
            </summary>
        </member>
        <member name="F:YggdrAshill.Ragnarok.Ownership.Internal">
            <summary>
            Manage as an instance resolved internally.
            </summary>
        </member>
        <member name="F:YggdrAshill.Ragnarok.Ownership.External">
            <summary>
            Leave as an instance resolved externally.
            </summary>
        </member>
    </members>
</doc>
